package cn.hisaas.huiguanli.frame.hy;

import java.io.UnsupportedEncodingException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import android.annotation.SuppressLint;
import android.app.Activity;
import android.app.AlertDialog;
import android.app.DatePickerDialog;
import android.app.DatePickerDialog.OnDateSetListener;
import android.os.Bundle;
import android..app.Fragment;
import android.text.InputType;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.View.OnClickListener;
import android.view.View.OnFocusChangeListener;
import android.widget.DatePicker;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;
import cn.hisaas.huiguanli.activity.R;
import cn.hisaas.huiguanli.model.UpResultOfReturn;
import cn.hisaas.huiguanli.net.HtClient;
import cn.hisaas.huiguanli.net.listener.UpListenerDo;
import cn.hisaas.huiguanli.parm.SystemParm;
import cn.hisaas.huiguanli.tools.Hide;
import cn.hisaas.huiguanli.tools.Util;

@SuppressLint("SimpleDateFormat")
public class CheckInFragment extends Fragment implements OnClickListener,OnDateSetListener{
	
	
	

	public static String tag="签到";
	
	private EditText cardNo;
	private TextView ksrqView;
	private TextView jsrqView;
	private int rqSelectId=-1;
	private Activity activity;
	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		View view=inflater.inflate(R.layout.check_in_hy, container,false);
		cardNo=(EditText)view.findViewById(R.id.hy_qd_cardno);
		cardNo.setInputType(InputType.TYPE_NULL); 
		cardNo.setOnFocusChangeListener(new OnFocusChangeListener() {
			@Override
			public void onFocusChange(View v, boolean hasFocus) {
				if(hasFocus){
					Hide.hideInputWindow(activity);
				}
			}
		});
		activity=this.getActivity();
		ksrqView=(TextView)view.findViewById(R.id.hy_condition_serach_ksrq);
		jsrqView=(TextView)view.findViewById(R.id.hy_condition_serach_jsrq);
		view.findViewById(R.id.hy_qd_buton).setOnClickListener(this);
		view.findViewById(R.id.hy_qd_cardno_clear).setOnClickListener(this);
		ksrqView.setOnClickListener(this);
		jsrqView.setOnClickListener(this);
		String rq=new SimpleDateFormat("yyyy-MM-dd").format(new Date());
		ksrqView.setText(rq);
		jsrqView.setText(rq);
		return view;
	}
	/**
	 * 签到监听
	 * @author Fan
	 *
	 */
	private UpListenerDo qdToDo =new UpListenerDo(){
		@Override
		public void onRequstFish(UpResultOfReturn model) {
			if(model.isSuccess()){
				Util.dismissDialog();
				cardNo.setText(null);
				Util.showResultDialog(activity, "签到成功", "提示", true, 1);
				Log.e("test",model.getMessage());
			}else{
				Util.dismissDialog();
				Toast.makeText(activity, model.getMessage(), Toast.LENGTH_SHORT).show();
			}
			
		}
		@Override
		public void onRequstFail(int code,String message) {
			Util.dismissDialog();
			Toast.makeText(activity, message, Toast.LENGTH_SHORT).show();
		}

		@Override
		public void onRequstStart() {
			Util.showProgressDialog(activity, null, "正在操作...");
		}
	};
	private final DatePickerDialog creatNewDate(){
		final Calendar c = Calendar.getInstance();  
        int year = c.get(Calendar.YEAR);  
        int month = c.get(Calendar.MONTH);  
        int day = c.get(Calendar.DAY_OF_MONTH);  
        return new DatePickerDialog(this.getActivity(),AlertDialog.THEME_HOLO_LIGHT ,this, year, month, day);
	}
	@Override
	public void onDateSet(DatePicker view, int year, int monthOfYear, int dayOfMonth) {
		switch(rqSelectId){
		case R.id.hy_condition_serach_ksrq:
			ksrqView.setText(Util.getRq(year, monthOfYear, dayOfMonth));;
			break;
		case R.id.hy_condition_serach_jsrq:
			jsrqView.setText(Util.getRq(year, monthOfYear, dayOfMonth));;
			break;
		}
	}

	/**
	 * 日期选择器
	 */
	private final void showDatePickerDialog(TextView textView){
		rqSelectId=textView.getId();
		String date=textView.getText().toString();
		DatePickerDialog dd=null;
		if (date == null || "".equals(date.trim())) {
			dd=creatNewDate();
			dd.show();
		} else {
			try {
				String s[] = date.split("-");
				dd=new DatePickerDialog(getActivity(),AlertDialog.THEME_HOLO_LIGHT, this, Integer.parseInt(s[0]), Integer.parseInt(s[1])-1,Integer.parseInt(s[2]));
				dd.show();
			} catch (Exception e) {
				creatNewDate().show();;
			}
		}
	} 
	@Override
	public void onClick(View v) {
		switch(v.getId()){
		case R.id.hy_condition_serach_ksrq:
			showDatePickerDialog(ksrqView);
			break;
		case R.id.hy_condition_serach_jsrq:
			showDatePickerDialog(jsrqView);
			break;
		case R.id.hy_qd_buton:
			qd();
			break;
		case R.id.hy_qd_cardno:
			cardNo.setText(null);
			break;
		}
	}
	
	private void qd(){
		Map<String, Object> map=new HashMap<String, Object>();
		map.put("cardNo", cardNo.getText().toString());
		map.put("md", SystemParm.md);
		map.put("opper", SystemParm.opper);
		try {
			HtClient.post(activity,"member/checkIn", "utf-8", map, qdToDo, "utf-8");
    	} catch (UnsupportedEncodingException e) {
			Toast.makeText(activity, e.getMessage(), Toast.LENGTH_SHORT).show();
		}
	}
}
