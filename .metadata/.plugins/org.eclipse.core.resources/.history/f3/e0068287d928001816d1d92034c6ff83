package cn.hisaas.huiguanli.frame;

import java.util.ArrayList;
import java.util.List;

import cn.hisaas.huiguanli.activity.R;
import cn.hisaas.huiguanli.adaper.HYFrameAdapter;
import android.app.Activity;
import android.app.Fragment;
import android.app.FragmentManager;
import android.app.FragmentTransaction;
import android.os.Bundle;
import android.os.PersistableBundle;
import android.util.SparseArray;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.GridView;
import android.widget.LinearLayout;

public class HYFragment extends BaseFragment {

	private GridView grid;
	private LinearLayout linear;
	private HYFrameAdapter adapter;
	private Activity activity;

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		View view = inflater
				.inflate(R.layout.hy_frame_layout, container, false);
		grid = (GridView) view.findViewById(R.id.hy_frame_grid);
		linear = (LinearLayout) view.findViewById(R.id.hy_frame_linear);
		initData();
		return view;
	}

	private void initData() {
		// TODO Auto-generated method stub
		activity = getActivity();
		List<SparseArray<Object>> datas = new ArrayList<SparseArray<Object>>();
		int[] images = { R.drawable.hy_v, R.drawable.hy_v, R.drawable.hy_v,
				R.drawable.hy_v, R.drawable.hy_v, R.drawable.hy_v,
				R.drawable.hy_v };
		String[] texts = { "注册会员", "会员充值", "卡冻结", "卡挂失", "卡注销", "会员签到", "积分兑换" };
		for (int i = 0; i < texts.length; i++) {
			SparseArray<Object> sa = new SparseArray<Object>();
			sa.append(0, images[i]);
			sa.append(1, texts[i]);
			datas.add(sa);
		}
		adapter = new HYFrameAdapter(activity, datas, R.layout.hy_frame_item);
		grid.setAdapter(adapter);
	}

	private Fragment currentFragment = new Fragment();
	private List<Fragment> fragments = new ArrayList<Fragment>();
	private FragmentManager fragmentManager;
	private int currentIndex = 0;
	// 当前显示的fragment
	private static final String CURRENT_FRAGMENT = "STATE_FRAGMENT_SHOW";

	/**
	 * 设置默认显示fragment
	 */
	private void setDefaultFragment(Bundle savedInstanceState) {
		fragmentManager = activity.getFragmentManager();
		if (savedInstanceState != null) { // “内存重启”时调用

			// 获取“内存重启”时保存的索引下标
			currentIndex = savedInstanceState.getInt(CURRENT_FRAGMENT, 0);
			// 注意，添加顺序要跟下面添加的顺序一样！！！！
			fragments.removeAll(fragments);
			fragments.add(fragmentManager.findFragmentByTag(0 + ""));
			fragments.add(fragmentManager.findFragmentByTag(1 + ""));
			fragments.add(fragmentManager.findFragmentByTag(2 + ""));
			fragments.add(fragmentManager.findFragmentByTag(3 + ""));
			// 恢复fragment页面
			restoreFragment();
		} else {
			// 正常启动时调用

			// fragments.add(new FragmentHome());
			// fragments.add(new FragmentNear());
			// fragments.add(new FragmentOrder());
			// fragments.add(new FragmentMine());
			// showFragment();
		}
	}

	// @Override
	// public void onSaveInstanceState(Bundle outState, PersistableBundle
	// outPersistentState) {
	// //“内存重启”时保存当前的fragment名字
	// outState.putInt(CURRENT_FRAGMENT,currentIndex);
	// super.onSaveInstanceState(outState, outPersistentState);
	// }

	/**
	 * 使用show() hide()切换页面 显示fragment
	 */
	private void showFragment() {
		FragmentTransaction transaction = fragmentManager.beginTransaction();
		// 如果之前没有添加过
		if (!fragments.get(currentIndex).isAdded()) {
			transaction.hide(currentFragment).add(R.id.hy_frame_linear,
					fragments.get(currentIndex), "" + currentIndex);
			// 第三个参数为添加当前的fragment时绑定一个tag
		} else {
			transaction.hide(currentFragment).show(fragments.get(currentIndex));
		}
		currentFragment = fragments.get(currentIndex);
		transaction.commit();
	}

	/**
	 * 恢复fragment
	 */
	private void restoreFragment() {
		FragmentTransaction mBeginTreansaction = fragmentManager
				.beginTransaction();
		for (int i = 0; i < fragments.size(); i++) {
			if (i == currentIndex) {
				mBeginTreansaction.show(fragments.get(i));
			} else {
				mBeginTreansaction.hide(fragments.get(i));
			}
		}
		mBeginTreansaction.commit();
		// 把当前显示的fragment记录下来
		currentFragment = fragments.get(currentIndex);
	}

}
