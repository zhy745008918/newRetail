package cn.hisaas.huiguanli.frame;

import java.util.ArrayList;
import java.util.List;

import cn.hisaas.huiguanli.activity.R;
import cn.hisaas.huiguanli.adaper.HYFrameAdapter;
import cn.hisaas.huiguanli.frame.hy.CheckInFragment;
import cn.hisaas.huiguanli.frame.hy.CreditsExchangeFragment;
import cn.hisaas.huiguanli.frame.hy.FreezeFragment;
import cn.hisaas.huiguanli.frame.hy.LogOutFragment;
import cn.hisaas.huiguanli.frame.hy.RechargeFragment;
import cn.hisaas.huiguanli.frame.hy.RegisteredFragment;
import cn.hisaas.huiguanli.frame.hy.ReportLossFragment;
import android.app.Activity;
import android.app.Fragment;
import android.app.FragmentManager;
import android.app.FragmentTransaction;
import android.os.Bundle;
import android.os.PersistableBundle;
import android.util.SparseArray;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.GridView;
import android.widget.LinearLayout;

public class HYFragment extends BaseFragment implements OnItemClickListener {

	private GridView grid;
	private LinearLayout linear;
	private HYFrameAdapter adapter;
	private Activity activity;
	private Fragment currentFragment = new Fragment();
	private List<Fragment> fragments = new ArrayList<Fragment>();
	private FragmentManager fragmentManager;
	
	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		View view = inflater
				.inflate(R.layout.hy_frame_layout, container, false);
		grid = (GridView) view.findViewById(R.id.hy_frame_grid);
		linear = (LinearLayout) view.findViewById(R.id.hy_frame_linear);
		initData();
		return view;
	}

	private void initData() {
		// TODO Auto-generated method stub
		activity = getActivity();
		List<SparseArray<Object>> datas = new ArrayList<SparseArray<Object>>();
		int[] images = { R.drawable.hy_v, R.drawable.hy_v, R.drawable.hy_v,
				R.drawable.hy_v, R.drawable.hy_v, R.drawable.hy_v,
				R.drawable.hy_v };
		String[] texts = { "注册会员", "会员充值", "卡冻结", "卡挂失", "卡注销", "会员签到", "积分兑换" };
		for (int i = 0; i < texts.length; i++) {
			SparseArray<Object> sa = new SparseArray<Object>();
			sa.append(0, images[i]);
			sa.append(1, texts[i]);
			datas.add(sa);
		}
		adapter = new HYFrameAdapter(activity, datas, R.layout.hy_frame_item);
		grid.setAdapter(adapter);
		grid.setOnItemClickListener(this);
		fragmentManager = activity.getFragmentManager();
		addFragments();

	}

	
	@Override
	public void onResume() {
		// TODO Auto-generated method stub
		super.onResume();
		linear.setVisibility(View.GONE);
		grid.setVisibility(View.VISIBLE);
	}
	/**
	 * 添加fragment
	 */
	private void addFragments() {
		// TODO Auto-generated method stub
		fragments.add(new RegisteredFragment());
		fragments.add(new RechargeFragment());
		fragments.add(new FreezeFragment());
		fragments.add(new ReportLossFragment());
		fragments.add(new LogOutFragment());
		fragments.add(new CheckInFragment());
		fragments.add(new CreditsExchangeFragment());
	}

	

	/**
	 * 使用show() hide()切换页面 显示fragment
	 */
	private void showFragment(int currentIndex) {
		FragmentTransaction transaction = fragmentManager.beginTransaction();
		// 如果之前没有添加过
		if (!fragments.get(currentIndex).isAdded()) {
			transaction.hide(currentFragment).add(R.id.hy_frame_replace,
					fragments.get(currentIndex), "" + currentIndex);
			// 第三个参数为添加当前的fragment时绑定一个tag
		} else {
			transaction.hide(currentFragment).show(fragments.get(currentIndex));
		}
		currentFragment = fragments.get(currentIndex);
		transaction.commit();
	}

	@Override
	public void onItemClick(AdapterView<?> arg0, View arg1, int position,
			long arg3) {
		// TODO Auto-generated method stub
		linear.setVisibility(View.VISIBLE);
		showFragment(position);
		grid.setVisibility(View.GONE);

	}

}
