package cn.hisaas.huiguanli.frame;


import android.annotation.SuppressLint;
import android.app.Activity;
import android.content.Context;
import android.os.Bundle;
import android.app.Fragment;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;



@SuppressLint("NewApi")
public abstract class BaseFragment extends Fragment{
	private static final String TAG = "BaseFragment";
	@Override
	public void onAttach(Activity activity) {
		super.onAttach(activity);
		Log.i(TAG, "onAttach...");
	}

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		Log.i(TAG, "onCreate...");
	}

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		Log.i(TAG, "onCreateView...");
		return 	super.onCreateView(inflater, container, savedInstanceState);
	}

	@Override
	public void onActivityCreated(Bundle savedInstanceState) {
		Log.i(TAG, "onActivityCreated...");
		super.onActivityCreated(savedInstanceState);
	}

	@Override
	public void onStart() {
		Log.i(TAG, "onStart...");
		super.onStart();
	}

	@Override
	public void onResume() {
		Log.i(TAG, "onResume...");
		super.onResume();
	}

	@Override
	public void onPause() {
		Log.i(TAG, "onPause...");
		super.onPause();
	}

	@Override
	public void onStop() {
		Log.i(TAG, "onStop...");
		super.onStop();
	}

	@Override
	public void onDestroyView() {
		Log.i(TAG, "onDestroyView...");
		super.onDestroyView();
	}

	@Override
	public void onDestroy() {
		Log.i(TAG, "onDestroy...");
		super.onDestroy();
	}
	protected void getMessage(){
		
	}
	
	/**
	 * 显示是做的事情
	 */
	public void showDo(Activity activity){
		Log.i(TAG, "显示了");
	}
	
	/**
	 * 隐藏时做的事情
	 */
	public void hideDo(Activity activity){
		Log.i(TAG, "隐藏了");
	}
	/**
	 * 实例化
	 * @param context
	 * @param tag 页面标签
	 * @return
	 * @throws ClassNotFoundException 
	 * @throws IllegalAccessException 
	 * @throws java.lang.InstantiationException 
	 */
	public static BaseFragment newInstance(Context context,String tag) throws Exception {
		return (BaseFragment)Class.forName(tag).newInstance();
	}
	
}
